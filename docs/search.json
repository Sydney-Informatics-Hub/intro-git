[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SIH Introduction to version control using git",
    "section": "",
    "text": "This course is aimed at researchers, students, and industry professionals who want to learn about version controlling their code (or text files).\nThis course is adapted from Version Control with Git by staff from the Sydney Informatics Hub (Darya Vanichkina, …).\nAll materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "index.html#trainers",
    "href": "index.html#trainers",
    "title": "SIH Introduction to version control using git",
    "section": "Trainers",
    "text": "Trainers\n\nDarya Vanichkina (PhD Bioinformatics, SFHEA)\nKristian Maras (MSc Quant Fin)\nNathaniel (Nate) Butterworth (PhD Computational Geophysics)\nMichael Lynch (Research Software Engineering Team Lead)"
  },
  {
    "objectID": "index.html#course-pre-requisites-and-setup-requirements",
    "href": "index.html#course-pre-requisites-and-setup-requirements",
    "title": "SIH Introduction to version control using git",
    "section": "Course pre-requisites and setup requirements",
    "text": "Course pre-requisites and setup requirements\n\nNo previous programming experience is required.\nTraining will be delivered in-person, so you will need your own laptop with a stable internet connection and the ability to install your own software."
  },
  {
    "objectID": "index.html#code-of-conduct",
    "href": "index.html#code-of-conduct",
    "title": "SIH Introduction to version control using git",
    "section": "Code of Conduct",
    "text": "Code of Conduct\nWe expect all attendees of our training to follow our code of conduct, including bullying, harassment and discrimination prevention policies.\nIn order to foster a positive and professional learning environment we encourage the following kinds of behaviours at all our events and on our platforms:\n\nUse welcoming and inclusive language\nBe respectful of different viewpoints and experiences\nGracefully accept constructive criticism\nFocus on what is best for the community\nShow courtesy and respect towards other community members\n\nOur full CoC, with incident reporting guidelines, is available here."
  },
  {
    "objectID": "index.html#setup-instructions",
    "href": "index.html#setup-instructions",
    "title": "SIH Introduction to version control using git",
    "section": "Setup Instructions",
    "text": "Setup Instructions\nPlease complete the Setup Instructions before the course.\nIf you have any trouble, please get in contact with us via email ASAP."
  },
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "Setup",
    "section": "",
    "text": "Git is a version control system that lets you track who made changes to what when and has options for easily updating a shared or public version of your code on github.com.\n\nYou will need a supported web browser.\n\nPrior to the session, we recommend you use your “official” university email to create an account on github.com. You can skip this step if you already have a github.com and you know the username/password you used to log in to it. GitHub accounts are free, and - with your University affiliation - you may be able to get a “Pro” GitHub account for free (you need to email the GitHub Education team for this). Note that a free account will suffice for all of what we are doing in the training session, so you don’t need to do this before class. Please consider what personal information you’d like to reveal. For example, you may want to review these instructions for keeping your email address private provided at GitHub.\nAll materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "setup.html#install-git",
    "href": "setup.html#install-git",
    "title": "Setup",
    "section": "Install git",
    "text": "Install git\n\nWindows\n\nDownload the Git for Windows installer, also known as GitBash.\nRun the installer and follow the steps below:\n\nClick on “Next” four times (two times if you’ve previously installed Git). You don’t need to change anything in the Information, location, components, and start menu screens.\nFrom the dropdown menu, “Choosing the default editor used by Git”, select “Use the Vim editor by default” and click on “Next”.\nOn the page that says “Adjusting the name of the initial branch in new repositories”, ensure that “Let Git decide” is selected. This will ensure the highest level of compatibility for our lessons.\nEnsure that “Git from the command line and also from 3rd-party software” is selected and click on “Next”. (If you don’t do this Git Bash will not work properly, requiring you to remove the Git Bash installation, re-run the installer and to select the “Git from the command line and also from 3rd-party software” option.)\nSelect “Use bundled OpenSSH”.\nEnsure that “Use the native Windows Secure Channel Library” is selected and click on “Next”.\nEnsure that “Checkout Windows-style, commit Unix-style line endings” is selected and click on “Next”.\nEnsure that “Use Windows’ default console window” is selected and click on “Next”.\nEnsure that “Default (fast-forward or merge) is selected and click”Next”\nEnsure that “Git Credential Manager” is selected and click on “Next”.\nEnsure that “Enable file system caching” is selected and click on “Next”.\nClick on “Install”.\nClick on “Finish” or “Next”.\n\nIf your “HOME” environment variable is not set (or you don’t know what this is):\nOpen command prompt (Open Start Menu then type cmd and press Enter)\nType the following line into the command prompt window exactly as shown:\n\nsetx HOME \"%USERPROFILE%\"\n\nPress Enter, you should see SUCCESS: Specified value was saved.\nQuit command prompt by typing exit then pressing Enter\n\nThis will provide you with both Git and Bash in the Git Bash program.\n\n\n\nMacOS\nThe easiest way to install git on a Mac is by installing Xcode Command Line Tools (note: you do not need all of Xcode!, which takes a lot more space on your hard drive).\nTo do this, open your Terminal application and type:\ngit --version\nIf you don’t have git installed already, a popup will appear:\n\nPress on the blue “Install” button and, after entering your password, git should be installed.\n\n\n\nLinux\nDepending on the Linux distribution on your laptop, you will need to open a Terminal application and execute one of the following commands:\n\nDebian/Ubuntu\nFor the latest stable version for your release of Debian/Ubuntu\n# apt-get install git\nFor Ubuntu, this PPA provides the latest stable upstream Git version\n# add-apt-repository ppa:git-core/ppa``# apt update; apt install git\n\n\nFedora\n# yum install git (up to Fedora 21) # dnf install git (Fedora 22 and later)\n\n\nGentoo\n# emerge --ask --verbose dev-vcs/git\n\n\nArch Linux\n# pacman -S git\n\n\nopenSUSE\n# zypper install git\n\n\nMageia\n# urpmi git\n\n\nNix/NixOS\n# nix-env -i git\n\n\nFreeBSD\n# pkg install git\n\n\nSolaris 9/10/11\n# pkgutil -i git\n\n\nSolaris 11 Express\n# pkg install developer/versioning/git\n\n\nOpenBSD\n# pkg_add git"
  },
  {
    "objectID": "setup.html#optional-install-gitkraken",
    "href": "setup.html#optional-install-gitkraken",
    "title": "Setup",
    "section": "(Optional) Install GitKraken",
    "text": "(Optional) Install GitKraken\n\nWe will show but not necessarily walk through GitKraken, an excellent (but paid for!) Git GUI tool. When working on large, multi-branch open-source and internal projects, this type of a tool can be very useful to navigate the mess that a too-many branch workflow can create.\nGit is a free alternative developed by GitHub which you may want to use as a free GUI instead."
  },
  {
    "objectID": "notebooks/02_config.html",
    "href": "notebooks/02_config.html",
    "title": "SIH Introduction to Version Control using Git",
    "section": "",
    "text": "All materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "notebooks/01_intro.html",
    "href": "notebooks/01_intro.html",
    "title": "SIH Introduction to Version Control using Git",
    "section": "",
    "text": "All materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "notebooks/00_otherresources.html",
    "href": "notebooks/00_otherresources.html",
    "title": "SIH Introduction to Version Control using Git",
    "section": "",
    "text": "All materials copyright Sydney Informatics Hub, University of Sydney"
  }
]